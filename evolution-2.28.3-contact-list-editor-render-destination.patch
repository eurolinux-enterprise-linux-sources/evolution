diff -up evolution-2.32.3/addressbook/gui/contact-list-editor/e-contact-list-editor.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/contact-list-editor/e-contact-list-editor.c
--- evolution-2.32.3/addressbook/gui/contact-list-editor/e-contact-list-editor.c.contact-list-editor-render-destination	2011-03-29 20:38:45.000000000 +0200
+++ evolution-2.32.3/addressbook/gui/contact-list-editor/e-contact-list-editor.c	2013-05-29 14:13:32.974614272 +0200
@@ -321,11 +321,21 @@ contact_list_editor_render_destination (
 
 	EDestination *destination;
 	const gchar *textrep;
+	gchar *name = NULL, *email = NULL, *tofree = NULL;
 
 	gtk_tree_model_get (model, iter, 0, &destination, -1);
 	textrep = e_destination_get_textrep (destination, TRUE);
+
+	if (eab_parse_qp_email (textrep, &name, &email)) {
+		tofree = g_strdup_printf ("%s <%s>", name, email);
+		textrep = tofree;
+		g_free (name);
+		g_free (email);
+	}
+
 	g_object_set (renderer, "text", textrep, NULL);
 	g_object_unref (destination);
+	g_free (tofree);
 }
 
 static void
diff -up evolution-2.32.3/addressbook/gui/widgets/eab-contact-display.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/widgets/eab-contact-display.c
--- evolution-2.32.3/addressbook/gui/widgets/eab-contact-display.c.contact-list-editor-render-destination	2013-05-29 14:14:33.771738925 +0200
+++ evolution-2.32.3/addressbook/gui/widgets/eab-contact-display.c	2013-05-29 14:18:42.393613796 +0200
@@ -32,6 +32,8 @@
 #include "e-util/e-icon-factory.h"
 #include "e-util/e-plugin-ui.h"
 
+#include "addressbook/util/eab-book-util.h"
+
 #include <string.h>
 #include <glib/gi18n.h>
 #include <gtkhtml/gtkhtml.h>
diff -up evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.c
--- evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.c.contact-list-editor-render-destination	2013-05-29 14:14:54.401738844 +0200
+++ evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.c	2013-05-29 14:19:17.061738388 +0200
@@ -43,9 +43,6 @@
 #include <e-util/e-icon-factory.h>
 #include "eab-contact-merging.h"
 
-/* we link to camel for decoding quoted printable email addresses */
-#include <camel/camel.h>
-
 void
 eab_error_dialog (const gchar *msg, const GError *error)
 {
@@ -476,57 +473,3 @@ eab_transfer_contacts (EBook *source_boo
 		destination, parent_window, NULL,
 		(GAsyncReadyCallback) book_loaded_cb, process);
 }
-
-/* To parse something like...
-=?UTF-8?Q?=E0=A4=95=E0=A4=95=E0=A4=AC=E0=A5=82=E0=A5=8B=E0=A5=87?=\t\n=?UTF-8?Q?=E0=A4=B0?=\t\n<aa@aa.ccom>
-and return the decoded representation of name & email parts.
-*/
-gboolean
-eab_parse_qp_email (const gchar *string, gchar **name, gchar **email)
-{
-	struct _camel_header_address *address;
-	gboolean res = FALSE;
-
-	address = camel_header_address_decode (string, "UTF-8");
-
-	if (!address)
-		return FALSE;
-
-	/* report success only when we have filled both name and email address */
-	if (address->type == CAMEL_HEADER_ADDRESS_NAME  && address->name && *address->name && address->v.addr && *address->v.addr) {
-		*name = g_strdup (address->name);
-		*email = g_strdup (address->v.addr);
-		res = TRUE;
-	}
-
-	camel_header_address_unref (address);
-
-	return res;
-}
-
-/* This is only wrapper to parse_qp_mail, it decodes string and if returned TRUE,
-   then makes one string and returns it, otherwise returns NULL.
-   Returned string is usable to place directly into GtkHtml stream.
-   Returned value should be freed with g_free. */
-gchar *
-eab_parse_qp_email_to_html (const gchar *string)
-{
-	gchar *name = NULL, *mail = NULL;
-	gchar *html_name, *html_mail;
-	gchar *value;
-
-	if (!eab_parse_qp_email (string, &name, &mail))
-		return NULL;
-
-	html_name = e_text_to_html (name, 0);
-	html_mail = e_text_to_html (mail, E_TEXT_TO_HTML_CONVERT_ADDRESSES);
-
-	value = g_strdup_printf ("%s &lt;%s&gt;", html_name, html_mail);
-
-	g_free (html_name);
-	g_free (html_mail);
-	g_free (name);
-	g_free (mail);
-
-	return value;
-}
diff -up evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.h.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.h
--- evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.h.contact-list-editor-render-destination	2013-05-29 14:15:12.703739004 +0200
+++ evolution-2.32.3/addressbook/gui/widgets/eab-gui-util.h	2013-05-29 14:19:29.690612661 +0200
@@ -49,12 +49,6 @@ ESource *	eab_select_source		(ESource *e
 						 const gchar *select_uid,
 						 GtkWindow *parent);
 
-/* To parse quoted printable address & return email & name fields */
-gboolean	eab_parse_qp_email		(const gchar *string,
-						 gchar **name,
-						 gchar **email);
-gchar *		eab_parse_qp_email_to_html	(const gchar *string);
-
 G_END_DECLS
 
 #endif /* __E_ADDRESSBOOK_UTIL_H__ */
diff -up evolution-2.32.3/addressbook/gui/widgets/e-addressbook-table-adapter.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/widgets/e-addressbook-table-adapter.c
--- evolution-2.32.3/addressbook/gui/widgets/e-addressbook-table-adapter.c.contact-list-editor-render-destination	2013-05-29 14:15:31.901738926 +0200
+++ evolution-2.32.3/addressbook/gui/widgets/e-addressbook-table-adapter.c	2013-05-29 14:19:52.513613600 +0200
@@ -24,6 +24,7 @@
 #include <glib/gi18n.h>
 #include "e-addressbook-model.h"
 #include "e-addressbook-table-adapter.h"
+#include "addressbook/util/eab-book-util.h"
 #include "eab-contact-merging.h"
 #include "eab-gui-util.h"
 #include <libxml/tree.h>
diff -up evolution-2.32.3/addressbook/gui/widgets/e-minicard.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/gui/widgets/e-minicard.c
--- evolution-2.32.3/addressbook/gui/widgets/e-minicard.c.contact-list-editor-render-destination	2013-05-29 14:15:55.194738870 +0200
+++ evolution-2.32.3/addressbook/gui/widgets/e-minicard.c	2013-05-29 14:20:16.910612489 +0200
@@ -31,6 +31,7 @@
 #include <misc/e-canvas-utils.h>
 #include <misc/e-canvas.h>
 #include <libebook/e-book.h>
+#include "addressbook/util/eab-book-util.h"
 #include "eab-gui-util.h"
 #include "e-minicard.h"
 #include "e-minicard-label.h"
diff -up evolution-2.32.3/addressbook/printing/e-contact-print.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/printing/e-contact-print.c
--- evolution-2.32.3/addressbook/printing/e-contact-print.c.contact-list-editor-render-destination	2013-05-29 14:16:14.008738955 +0200
+++ evolution-2.32.3/addressbook/printing/e-contact-print.c	2013-05-29 14:22:28.005737351 +0200
@@ -40,6 +40,8 @@
 #include "e-util/e-util.h"
 #include "e-util/e-util-private.h"
 
+#include "addressbook/util/eab-book-util.h"
+
 #include "e-contact-print.h"
 
 typedef struct _EContactPrintContext EContactPrintContext;
@@ -230,6 +232,41 @@ e_contact_start_new_column (EContactPrin
 	}
 }
 
+static gchar *
+get_contact_string_value (EContact *contact,
+			  gint field)
+{
+	const gchar *value;
+
+	g_return_val_if_fail (contact != NULL, NULL);
+
+	value = e_contact_get_const (contact, field);
+	if (!value || !*value)
+		return NULL;
+
+	if (field == E_CONTACT_EMAIL_1 ||
+	    field == E_CONTACT_EMAIL_2 ||
+	    field == E_CONTACT_EMAIL_3 ||
+	    field == E_CONTACT_EMAIL_4) {
+		gchar *email = NULL, *name = NULL;
+
+		if (eab_parse_qp_email (value, &name, &email)) {
+			gchar *res;
+
+			if (name && *name)
+				res = g_strdup_printf ("%s <%s>", name, email);
+			else
+				res = g_strdup_printf ("%s", email);
+
+			g_free (name);
+			g_free (email);
+
+			return res;
+		}
+	}
+	return g_strdup (value);
+}
+
 static gdouble
 e_contact_get_contact_height (EContact *contact,
                               EContactPrintContext *ctxt)
@@ -256,12 +293,14 @@ e_contact_get_contact_height (EContact *
 
 	for (field = E_CONTACT_FILE_AS; field != E_CONTACT_LAST_SIMPLE_STRING; field++)
 	{
-		const gchar *value;
+		gchar *value;
 		gchar *text;
 
-		value = e_contact_get_const (contact, field);
-		if (value == NULL || *value == '\0')
+		value = get_contact_string_value (contact, field);
+		if (value == NULL || *value == '\0') {
+			g_free (value);
 			continue;
+		}
 
 		text = g_strdup_printf ("%s:  %s",
 			e_contact_pretty_name (field), value);
@@ -271,6 +310,7 @@ e_contact_get_contact_height (EContact *
 
 		cntct_height += .2 * get_font_height (ctxt->style->body_font);
 
+		g_free (value);
 		g_free (text);
 	}
 
@@ -321,16 +361,18 @@ e_contact_print_contact (EContact *conta
 
 	for (field = E_CONTACT_FILE_AS; field != E_CONTACT_LAST_SIMPLE_STRING; field++)
 	{
-		const gchar *value;
+		gchar *value;
 		gchar *text;
 		gint wrapped_lines=0;
 
 		if (ctxt->y > page_height)
 			e_contact_start_new_column (ctxt);
 
-		value = e_contact_get_const (contact, field);
-		if (value == NULL || *value == '\0')
+		value = get_contact_string_value (contact, field);
+		if (value == NULL || *value == '\0') {
+			g_free (value);
 			continue;
+		}
 
 		text = g_strdup_printf ("%s:  %s",
 			e_contact_pretty_name (field), value);
@@ -353,6 +395,7 @@ e_contact_print_contact (EContact *conta
 
 		ctxt->y += .2 * get_font_height (ctxt->style->body_font);
 
+		g_free (value);
 		g_free (text);
 	}
 
diff -up evolution-2.32.3/addressbook/util/eab-book-util.c.contact-list-editor-render-destination evolution-2.32.3/addressbook/util/eab-book-util.c
--- evolution-2.32.3/addressbook/util/eab-book-util.c.contact-list-editor-render-destination	2013-05-29 14:16:32.593520738 +0200
+++ evolution-2.32.3/addressbook/util/eab-book-util.c	2013-05-29 14:18:11.540612494 +0200
@@ -28,6 +28,11 @@
 #include <glib.h>
 #include <glib-object.h>
 
+/* we link to camel for decoding quoted printable email addresses */
+#include <camel/camel.h>
+
+#include "e-util/e-html-utils.h"
+
 /*
  *
  * Specialized Queries
@@ -413,3 +418,57 @@ e_utf8_casefold_collate (const gchar *st
 {
 	return e_utf8_casefold_collate_len (str1, str2, -1);
 }
+
+/* To parse something like...
+=?UTF-8?Q?=E0=A4=95=E0=A4=95=E0=A4=AC=E0=A5=82=E0=A5=8B=E0=A5=87?=\t\n=?UTF-8?Q?=E0=A4=B0?=\t\n<aa@aa.ccom>
+and return the decoded representation of name & email parts.
+*/
+gboolean
+eab_parse_qp_email (const gchar *string, gchar **name, gchar **email)
+{
+	struct _camel_header_address *address;
+	gboolean res = FALSE;
+
+	address = camel_header_address_decode (string, "UTF-8");
+
+	if (!address)
+		return FALSE;
+
+	/* report success only when we have filled both name and email address */
+	if (address->type == CAMEL_HEADER_ADDRESS_NAME  && address->name && *address->name && address->v.addr && *address->v.addr) {
+		*name = g_strdup (address->name);
+		*email = g_strdup (address->v.addr);
+		res = TRUE;
+	}
+
+	camel_header_address_unref (address);
+
+	return res;
+}
+
+/* This is only wrapper to parse_qp_mail, it decodes string and if returned TRUE,
+   then makes one string and returns it, otherwise returns NULL.
+   Returned string is usable to place directly into GtkHtml stream.
+   Returned value should be freed with g_free. */
+gchar *
+eab_parse_qp_email_to_html (const gchar *string)
+{
+	gchar *name = NULL, *mail = NULL;
+	gchar *html_name, *html_mail;
+	gchar *value;
+
+	if (!eab_parse_qp_email (string, &name, &mail))
+		return NULL;
+
+	html_name = e_text_to_html (name, 0);
+	html_mail = e_text_to_html (mail, E_TEXT_TO_HTML_CONVERT_ADDRESSES);
+
+	value = g_strdup_printf ("%s &lt;%s&gt;", html_name, html_mail);
+
+	g_free (html_name);
+	g_free (html_mail);
+	g_free (name);
+	g_free (mail);
+
+	return value;
+}
diff -up evolution-2.32.3/addressbook/util/eab-book-util.h.contact-list-editor-render-destination evolution-2.32.3/addressbook/util/eab-book-util.h
--- evolution-2.32.3/addressbook/util/eab-book-util.h.contact-list-editor-render-destination	2013-05-29 14:16:54.347613555 +0200
+++ evolution-2.32.3/addressbook/util/eab-book-util.h	2013-05-29 14:17:24.224612676 +0200
@@ -56,6 +56,10 @@ void                   eab_query_address
 gint                    e_utf8_casefold_collate_len (const gchar *str1, const gchar *str2, gint len);
 gint                    e_utf8_casefold_collate (const gchar *str1, const gchar *str2);
 
+/* To parse quoted printable address & return email & name fields */
+gboolean eab_parse_qp_email (const gchar *string, gchar **name, gchar **email);
+gchar *eab_parse_qp_email_to_html (const gchar *string);
+
 G_END_DECLS
 
 #endif /* __EAB_UTIL_H__ */
